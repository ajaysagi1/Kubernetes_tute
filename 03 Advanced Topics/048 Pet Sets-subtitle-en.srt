1
00:00:00,700 --> 00:00:08,690
In this lecture, I'll be talking about Pet Sets. Stateful distributed apps on a Kubernetes cluster.

2
00:00:08,810 --> 00:00:15,800
Pet Sets is a new feature starting from Kubernetes 1.3. It is introduced to be able to run stateful applications

3
00:00:15,890 --> 00:00:24,020
that need a stable pod hostname, instead of a podname-randomstring

4
00:00:24,080 --> 00:00:27,630
But, if you used up till now, whenever we used the deployment or replica set,

5
00:00:27,650 --> 00:00:31,950
then there was some degree of randomness in our pod name.

6
00:00:32,330 --> 00:00:39,860
Your name will have an index, when having multiple instances of a pod, instead of that random string.

7
00:00:39,860 --> 00:00:40,460
For instance, "podname-0", "podname-1", and "podname-2".

8
00:00:40,550 --> 00:00:47,570
Another reason why you would Pet Sets is when you have a stateful app

9
00:00:47,660 --> 00:00:53,840
that requires multiple pods with a volume's based on their ordinal number, which means, "podname-" and then a number,

10
00:00:54,070 --> 00:00:58,330
or the needs a static hostname.

11
00:00:58,340 --> 00:01:04,010
Also know that when you use Pet Sets, currently deleting and/or scaling a PetSet down

12
00:01:04,010 --> 00:01:06,670
will not delete the volumes associated with the PetSet.

13
00:01:07,040 --> 00:01:12,080
They want to make sure that when you use Pet Sets the volumes are not just deleted.

14
00:01:13,490 --> 00:01:14,820
So what does it mean?

15
00:01:14,840 --> 00:01:19,820
A pet set will allow your stateful app to use DNS to find other peers.

16
00:01:20,090 --> 00:01:26,330
For instance, this can be useful for Cassandra clusters, ElasticSearch clusters, that use DNS to find

17
00:01:26,390 --> 00:01:28,630
other members in the cluster.

18
00:01:28,640 --> 00:01:35,130
One running node of your PetSet app is called a Pet, which is one node in a guest on a cluster.

19
00:01:35,160 --> 00:01:43,750
Using Pet Sets you can run, for instance, five Cassandra nodes, own Kubernetes named cassandra-0 until cassandra-5.

20
00:01:43,880 --> 00:01:49,520
And those can then discover each other, because those are peers based on this static hostname in the

21
00:01:49,520 --> 00:01:56,240
pod. If you wouldn't use Pet Sets, you would get the dynamic hostname, which you wouldn't be able to use in

22
00:01:56,240 --> 00:02:00,220
your configuration files as the name of your pod always change.

23
00:02:00,230 --> 00:02:05,300
So, the big difference here is that you don't really want to just connect to a service and then you're going to get any pod,

24
00:02:05,300 --> 00:02:11,870
you want to make sure that, for instance, "cassandra-1" connects to "cassandra-5",

25
00:02:11,870 --> 00:02:12,790
and to make that work, Pet Sets.

26
00:02:12,980 --> 00:02:18,560
Because only with Pet Sets you have these static hosting of your pod.

27
00:02:18,560 --> 00:02:19,310
So you know the hostname of the order to connect to.

28
00:02:19,370 --> 00:02:27,920
A Pet Set will also allow your stateful app to order

29
00:02:28,000 --> 00:02:34,100
your startup and teardown of the Pets, instead of randomly terminating Pets, which is one instance of

30
00:02:34,100 --> 00:02:37,970
your app, you will know which one that will go.

31
00:02:37,970 --> 00:02:43,610
This is useful, if you first need to drain the data from a node before you can shut it down.

32
00:02:43,610 --> 00:02:46,390
If you're using Cassandra, you will know what this means.

33
00:02:46,760 --> 00:02:51,270
If you want to shut down one node in your cluster, you first need to stop sending data to it.

34
00:02:51,650 --> 00:02:54,310
There's still a lot of future work that needs to be done for Pet Sets.

35
00:02:54,320 --> 00:02:58,780
Pet Sets are currently still in alpha,

36
00:02:58,970 --> 00:03:00,430
I'll add a demo when becomes more stable.

37
00:03:00,500 --> 00:03:04,970
So, there might be still things that are going to change. Whenever it becomes more stable

38
00:03:05,030 --> 00:03:07,110
I'll add them to this course.

